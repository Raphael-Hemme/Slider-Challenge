/* CSS Reset for Box-Sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* CSS Reset for lists and list items */
ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

/* CSS Variables in :root scope to be used for light/dark theme */
:root {
  --bg-color-1-dark: hsl(0, 0%, 20%);
  --bg-color-1-light: hsl(0, 0%, 96%);

  --bg-color-2-dark: hsl(0, 0%, 24%);
  --bg-color-2-light: hsl(0, 0%, 88%);

  --bg-color-with-alpha-dark: hsla(0, 0%, 20%, 0.7);
  --bg-color-with-alpha-light: hsla(0, 0%, 96%, 0.7);
  /* --bg-color-with-alpha: var(--bg-color-light); */

  --text-color-dark: hsl(0, 0%, 90%);
  --text-color-light: hsl(0, 0%, 20%);
  /* --text-color: var(--text-color-light); */

  --accent-color-dark: hsl(281, 85%, 52%);
  --accent-color-light: hsl(281, 78%, 30%);

  --skeleton-wave-color-light: hsla(0, 0%, 77%, 0.5);
  --skeleton-wave-color-dark: hsla(0, 0%, 30%, 0.5);
}

@media (prefers-color-scheme: dark) {
  :root {
    --bg-color-1: var(--bg-color-1-dark);
    --bg-color-2: var(--bg-color-2-dark);
    --text-color: var(--text-color-dark);
    --accent-color: var(--accent-color-dark);
    --skeleton-wave-color: var(--skeleton-wave-color-dark);
    --bg-color-with-alpha: var(--bg-color-with-alpha-dark);
  }
}
@media (prefers-color-scheme: light) {
  :root {
    --bg-color-1: var(--bg-color-1-light);
    --bg-color-2: var(--bg-color-2-light);
    --text-color: var(--text-color-light);
    --accent-color: var(--accent-color-light);
    --skeleton-wave-color: var(--skeleton-wave-color-light);
    --bg-color-with-alpha: var(--bg-color-with-alpha-light);
  }
}

body {
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 15px;
  background-color: var(--bg-color-1);
  display: flex;
  flex-direction: column;
  font-family: Arial, Helvetica, sans-serif;
  color: var(--text-color);

  @media (min-width: 1280px) {
    padding: 30px;
    align-items: center;
  }
}

header {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 15px;

  @media (min-width: 1280px) {
    width: 1280px;
  }
}

.slider,
.skeleton-container,
.error-container {
  height: 300px;
  width: calc(100% + 30px);
  margin: 0 -15px;

  @media (min-width: 1280px) {
    margin: 0;
    width: 1280px;
  }
}

.slider {
  border: 1px solid var(--bg-color-2);
  background-color: var(--bg-color-2);
  display: none;
  gap: 20px;
  overflow-x: scroll;
  overflow-y: hidden;
  scroll-snap-type: x mandatory;

  .slide-container {
    width: 500px;
    min-width: 500px;
    height: 100%;
    background-color: var(--bg-color-1);
    container-type: inline-size;
    scroll-snap-align: center;

    @media (min-width: 1280px) {
      width: 600px;
      min-width: 600px;
    }

    .slide-content {
      height: 100%;
      padding: 15px;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      color: var(--text-color);
      overflow: hidden;

      h3 {
        font-weight: bold;
        margin: 0;
        color: var(--accent-color);
      }

      .product-title {
        display: none;
      }

      @container (min-width: 550px) {
        .product-title {
          display: block;
          background-color: var(--bg-color-with-alpha);
          /* I experimented with mix-blend-mode to make the text color stand out even when the background image made it hard to read but was not satisfied with the colors */
          /* mix-blend-mode: exclusion; */
          margin: 0;
        }
      }
    }
  }

  /* Not sure if the absolute second slide (index 1 of the array) or the second visible slide (relative to the scroll container and position)
     should be the one with a reduced width of 500px. Absolute second seems more intuitive from a design perspective to highlight the second slide
     but not intuitive that it is reduced in width - also seems much more complicated technically -> intersection observer or maybe with has() ...*/
  .slide-container:nth-child(2) {
    min-width: 500px;
    max-width: 500px;
  }
}

/* I used help by Copilot to generate the following skeleton loading animation */
@keyframes skeleton {
  0% {
    background-position: 200% 0; /* Start the wave off-screen to the left */
  }
  100% {
    background-position: -200% 0; /* Move the wave off-screen to the right */
  }
}

.skeleton {
  width: 100%;
  height: 100%;

  background: linear-gradient(
    90deg,
    var(--bg-color-1) 25%,
    var(--skeleton-wave-color) 50%,
    var(--bg-color-1) 75%
  );
  background-size: 200% 100%;
  animation: skeleton 3s infinite linear;
}

.error-container {
  display: flex;
  justify-content: center;
  align-items: center;
  border: 5px dashed yellow;
  color: var(--text-color);
  display: none;

  .error-msg {
    font-size: 1.5rem;
    width: max-content;
  }
}
